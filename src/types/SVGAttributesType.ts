import { AttributeValueType } from './AttributesType.js';
import StyleAttributesType from './StyleAttributesType.js';

// SVGAttributesType
type SVGAVT = AttributeValueType;

export type SVGAttributesValueType = SVGAVT;

export interface SVGPresentationAttributesType {
  alignmentBaseline?: SVGAVT,
  baselineShift?: SVGAVT,
  clip?: SVGAVT,
  clipPath?: SVGAVT,
  clipRule?: SVGAVT,
  color?: SVGAVT,
  colorInterpolation?: SVGAVT,
  colorInterpolationFilters?: SVGAVT,
  colorProfile?: SVGAVT,
  colorRendering?: SVGAVT,
  cursor?: SVGAVT,
  d?: SVGAVT,
  direction?: SVGAVT,
  display?: SVGAVT,
  dominantBaseline?: SVGAVT,
  enableBackground?: SVGAVT,
  fill?: SVGAVT,
  fillOpacity?: SVGAVT,
  fillRule?: SVGAVT,
  filter?: SVGAVT,
  floodColor?: SVGAVT,
  floodOpacity?: SVGAVT,
  fontFamily?: SVGAVT,
  fontSize?: SVGAVT,
  fontSizeAdjust?: SVGAVT,
  fontStretch?: SVGAVT,
  fontStyle?: SVGAVT,
  fontVariant?: SVGAVT,
  fontWeight?: SVGAVT,
  glyphOrientationHorizontal?: SVGAVT,
  glyphOrientationVertical?: SVGAVT,
  imageRendering?: SVGAVT,
  kerning?: SVGAVT,
  letterSpacing?: SVGAVT,
  lightingColor?: SVGAVT,
  markerEnd?: SVGAVT,
  markerMid?: SVGAVT,
  markerStart?: SVGAVT,
  mask?: SVGAVT,
  opacity?: SVGAVT,
  overflow?: SVGAVT,
  pointerEvents?: SVGAVT,
  shapeRendering?: SVGAVT,
  stopColor?: SVGAVT,
  stopOpacity?: SVGAVT,
  stroke?: SVGAVT,
  strokeDasharray?: SVGAVT,
  strokeDashoffset?: SVGAVT,
  strokeLinecap?: SVGAVT,
  strokeLinejoin?: SVGAVT,
  strokeMiterlimit?: SVGAVT,
  strokeOpacity?: SVGAVT,
  strokeWidth?: SVGAVT,
  textAnchor?: SVGAVT,
  textDecoration?: SVGAVT,
  textRendering?: SVGAVT,
  transform?: SVGAVT,
  transformOrigin?: SVGAVT,
  unicodeBidi?: SVGAVT,
  vectorEffect?: SVGAVT,
  visibility?: SVGAVT,
  wordSpacing?: SVGAVT,
  writingMode?: SVGAVT,
}

export interface SVGAttributesType {
  accentHeight?: SVGAVT,
  accumulate?: SVGAVT,
  additive?: SVGAVT,
  alignmentBaseline?: SVGAVT,
  alphabetic?: SVGAVT,
  amplitude?: SVGAVT,
  arabicForm?: SVGAVT,
  ascent?: SVGAVT,
  attributeName?: SVGAVT,
  attributeType?: SVGAVT,
  azimuth?: SVGAVT,
  baseFrequency?: SVGAVT,
  baselineShift?: SVGAVT,
  baseProfile?: SVGAVT,
  bbox?: SVGAVT,
  begin?: SVGAVT,
  bias?: SVGAVT,
  by?: SVGAVT,
  calcMode?: SVGAVT,
  capHeight?: SVGAVT,
  class?: SVGAVT,
  clip?: SVGAVT,
  clipPathUnits?: SVGAVT,
  clipPath?: SVGAVT,
  clipRule?: SVGAVT,
  color?: SVGAVT,
  colorInterpolation?: SVGAVT,
  colorInterpolationFilters?: SVGAVT,
  colorProfile?: SVGAVT,
  colorRendering?: SVGAVT,
  crossorigin?: SVGAVT,
  cursor?: SVGAVT,
  cx?: SVGAVT,
  cy?: SVGAVT,
  d?: SVGAVT,
  decelerate?: SVGAVT,
  descent?: SVGAVT,
  diffuseConstant?: SVGAVT,
  direction?: SVGAVT,
  display?: SVGAVT,
  divisor?: SVGAVT,
  dominantBaseline?: SVGAVT,
  dur?: SVGAVT,
  dx?: SVGAVT,
  dy?: SVGAVT,
  edgeMode?: SVGAVT,
  elevation?: SVGAVT,
  enableBackground?: SVGAVT,
  end?: SVGAVT,
  exponent?: SVGAVT,
  fill?: SVGAVT,
  fillOpacity?: SVGAVT,
  fillRule?: SVGAVT,
  filter?: SVGAVT,
  filterUnits?: SVGAVT,
  floodColor?: SVGAVT,
  floodOpacity?: SVGAVT,
  fontFamily?: SVGAVT,
  fontSize?: SVGAVT,
  fontSizeAdjust?: SVGAVT,
  fontStretch?: SVGAVT,
  fontStyle?: SVGAVT,
  fontVariant?: SVGAVT,
  fontWeight?: SVGAVT,
  format?: SVGAVT,
  from?: SVGAVT,
  fr?: SVGAVT,
  fx?: SVGAVT,
  fy?: SVGAVT,
  g1?: SVGAVT,
  g2?: SVGAVT,
  glyphName?: SVGAVT,
  glyphOrientationHorizontal?: SVGAVT,
  glyphOrientationVertical?: SVGAVT,
  glyphRef?: SVGAVT,
  gradientTransform?: SVGAVT,
  gradientUnits?: SVGAVT,
  hanging?: SVGAVT,
  height?: SVGAVT,
  href?: SVGAVT,
  hreflang?: SVGAVT,
  horizAdvX?: SVGAVT,
  horizOriginX?: SVGAVT,
  id?: SVGAVT,
  ideographic?: SVGAVT,
  imageRendering?: SVGAVT,
  in?: SVGAVT,
  in2?: SVGAVT,
  intercept?: SVGAVT,
  k?: SVGAVT,
  k1?: SVGAVT,
  k2?: SVGAVT,
  k3?: SVGAVT,
  k4?: SVGAVT,
  kernelMatrix?: SVGAVT,
  kernelUnitLength?: SVGAVT,
  kerning?: SVGAVT,
  keyPoints?: SVGAVT,
  keySplines?: SVGAVT,
  keyTimes?: SVGAVT,
  lang?: SVGAVT,
  lengthAdjust?: SVGAVT,
  letterSpacing?: SVGAVT,
  lightingColor?: SVGAVT,
  limitingConeAngle?: SVGAVT,
  local?: SVGAVT,
  markerEnd?: SVGAVT,
  markerMid?: SVGAVT,
  markerStart?: SVGAVT,
  markerHeight?: SVGAVT,
  markerUnits?: SVGAVT,
  markerWidth?: SVGAVT,
  mask?: SVGAVT,
  maskContentUnits?: SVGAVT,
  maskUnits?: SVGAVT,
  mathematical?: SVGAVT,
  max?: SVGAVT,
  media?: SVGAVT,
  method?: SVGAVT,
  min?: SVGAVT,
  mode?: SVGAVT,
  name?: SVGAVT,
  numOctaves?: SVGAVT,
  offset?: SVGAVT,
  opacity?: SVGAVT,
  operator?: SVGAVT,
  order?: SVGAVT,
  orient?: SVGAVT,
  orientation?: SVGAVT,
  origin?: SVGAVT,
  overflow?: SVGAVT,
  overlinePosition?: SVGAVT,
  overlineThickness?: SVGAVT,
  panose1?: SVGAVT,
  paintOrder?: SVGAVT,
  path?: SVGAVT,
  pathLength?: SVGAVT,
  patternContentUnits?: SVGAVT,
  patternTransform?: SVGAVT,
  patternUnits?: SVGAVT,
  ping?: SVGAVT,
  pointerEvents?: SVGAVT,
  points?: SVGAVT,
  pointsAtX?: SVGAVT,
  pointsAtY?: SVGAVT,
  pointsAtZ?: SVGAVT,
  preserveAlpha?: SVGAVT,
  preserveAspectRatio?: SVGAVT,
  primitiveUnits?: SVGAVT,
  r?: SVGAVT,
  radius?: SVGAVT,
  referrerPolicy?: SVGAVT,
  refX?: SVGAVT,
  refY?: SVGAVT,
  rel?: SVGAVT,
  renderingIntent?: SVGAVT,
  repeatCount?: SVGAVT,
  repeatDur?: SVGAVT,
  requiredExtensions?: SVGAVT,
  requiredFeatures?: SVGAVT,
  restart?: SVGAVT,
  result?: SVGAVT,
  rotate?: SVGAVT,
  rx?: SVGAVT,
  ry?: SVGAVT,
  scale?: SVGAVT,
  seed?: SVGAVT,
  shapeRendering?: SVGAVT,
  slope?: SVGAVT,
  spacing?: SVGAVT,
  specularConstant?: SVGAVT,
  specularExponent?: SVGAVT,
  speed?: SVGAVT,
  spreadMethod?: SVGAVT,
  startOffset?: SVGAVT,
  stdDeviation?: SVGAVT,
  stemh?: SVGAVT,
  stemv?: SVGAVT,
  stitchTiles?: SVGAVT,
  stopColor?: SVGAVT,
  stopOpacity?: SVGAVT,
  strikethroughPosition?: SVGAVT,
  strikethroughThickness?: SVGAVT,
  string?: SVGAVT,
  stroke?: SVGAVT,
  strokeDasharray?: SVGAVT,
  strokeDashoffset?: SVGAVT,
  strokeLinecap?: SVGAVT,
  strokeLinejoin?: SVGAVT,
  strokeMiterlimit?: SVGAVT,
  strokeOpacity?: SVGAVT,
  strokeWidth?: SVGAVT,
  style?: StyleAttributesType,
  surfaceScale?: SVGAVT,
  systemLanguage?: SVGAVT,
  tabindex?: SVGAVT,
  tableValues?: SVGAVT,
  target?: SVGAVT,
  targetX?: SVGAVT,
  targetY?: SVGAVT,
  textAnchor?: SVGAVT,
  textDecoration?: SVGAVT,
  textRendering?: SVGAVT,
  textLength?: SVGAVT,
  to?: SVGAVT,
  transform?: SVGAVT,
  transformOrigin?: SVGAVT,
  type?: SVGAVT|unknown,
  u1?: SVGAVT,
  u2?: SVGAVT,
  underlinePosition?: SVGAVT,
  underlineThickness?: SVGAVT,
  unicode?: SVGAVT,
  unicodeBidi?: SVGAVT,
  unicodeRange?: SVGAVT,
  unitsPerEm?: SVGAVT,
  vAlphabetic?: SVGAVT,
  vHanging?: SVGAVT,
  vIdeographic?: SVGAVT,
  vMathematical?: SVGAVT,
  values?: SVGAVT,
  vectorEffect?: SVGAVT,
  version?: SVGAVT,
  vertAdvY?: SVGAVT,
  vertOriginX?: SVGAVT,
  vertOriginY?: SVGAVT,
  viewBox?: SVGAVT,
  visibility?: SVGAVT,
  width?: SVGAVT,
  widths?: SVGAVT,
  wordSpacing?: SVGAVT,
  writingMode?: SVGAVT,
  x?: SVGAVT,
  xHeight?: SVGAVT,
  x1?: SVGAVT,
  x2?: SVGAVT,
  xChannelSelector?: SVGAVT,
  y?: SVGAVT,
  y1?: SVGAVT,
  y2?: SVGAVT,
  yChannelSelector?: SVGAVT,
  z?: SVGAVT,
  zoomAndPan?: SVGAVT
}

export default SVGAttributesType;
